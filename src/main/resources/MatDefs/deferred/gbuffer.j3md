MaterialDef gbuffer {

	MaterialParameters {
		Int MatId
		Float AlphaDiscardThreshold
		Texture2D AlphaMap
		Texture2D NormalMap
		Color Color
		Texture2D ColorMap
		Color Specular
		Texture2D SpecularMap
	}
	Technique {
	}
	Technique GBuf {

		VertexShader GLSL150 : Shaders/deferred/gbuffer.vert
		FragmentShader GLSL150 : Shaders/deferred/gbuffer.frag

		WorldParameters {
			WorldViewProjectionMatrix
			WorldMatrix
		}

		Defines {
			ALPHAMAP: AlphaMap
			NORMALMAP: NormalMap
			COLORMAP: ColorMap
			SPECULARMAP: SpecularMap
		}
	}

	Technique PreShadow {

		VertexShader GLSL150 : Shaders/deferred/gbuffer.vert
		//VertexShader GLSL100 :   Common/MatDefs/Shadow/PreShadow.vert
		//FragmentShader GLSL100 : Common/MatDefs/Shadow/PreShadow.frag
		//FragmentShader GLSL150 : Shaders/debug/black.frag
		//FragmentShader GLSL150 : Shaders/debug/show_fullgreen.frag
		//FragmentShader GLSL150 : Shaders/debug/z.frag
		FragmentShader GLSL150 : Shaders/deferred/shadowmap.frag
		WorldParameters {
			WorldViewProjectionMatrix
			WorldViewMatrix
		}

		Defines {
			COLOR_MAP : ColorMap
			DISCARD_ALPHA : AlphaDiscardThreshold
		}

		ForcedRenderState {
			FaceCull Off
			DepthTest On
			DepthWrite On
			PolyOffset 5 3
			ColorWrite Off
		}
	}
}
